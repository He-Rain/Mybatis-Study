<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-/mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuang.dao.TeacherMapper">
<select id="getTeacher" resultType="Teacher">
    select * from teacher;
</select>
<!--    //按照结果嵌套查询-->
    <select id="getTeacher1" resultMap="TeacherStudent">
        select  s.id sid,s.name sname,t.name tname,t.id tid
        from student s, teacher t
        where s.tid=t.id and t.id=#{tid}
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
       <result column="tid" property="id"></result>
        <result property="name" column="tname"></result>
<!--javaType用于指定属性的类型 javaType是java类型
   list是一个java类型，集合中的泛型信息，我们使用ofType获取，也就是泛型的约束类型-->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>
<!--========================================================    -->
<!--按照查询结果嵌套查询    -->
<select id="getTeacher2" resultMap="TeacherStudent2">
    select * from mybatis.teacher where id=#{tid}
</select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <result column="id" property="id"/>
<!--  对于以下的javaType的值也可以是list、Listz或者直接不写javaType这个属性也能够运行出来-->
        <collection property="students"  javaType="ArrayList" ofType="Student" select="getStudentByTeacherId" column="id"></collection>
    </resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
        select * from student where tid=#{id};
    </select>
</mapper>